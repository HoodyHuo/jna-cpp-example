package hello;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.ptr.IntByReference;
import java.nio.IntBuffer;
/**
 * JNA Wrapper for library <b>libcpp_lib_demo</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Libcpp_lib_demoLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "libcpp_lib_demo";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Libcpp_lib_demoLibrary.JNA_LIBRARY_NAME);
	public static final Libcpp_lib_demoLibrary INSTANCE = (Libcpp_lib_demoLibrary)Native.loadLibrary(Libcpp_lib_demoLibrary.JNA_LIBRARY_NAME, Libcpp_lib_demoLibrary.class);

	void hello();

	@Deprecated
	void pp(IntByReference arg, int len);

	void pp(IntBuffer arg, int len);

	MyUser.ByValue echo(MyUser.ByValue user);

	MyUser echoPoint(MyUser user);
}
